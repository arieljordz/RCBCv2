@model RCBC.Models.UpdatePasswordModel
@{
    ViewData["Title"] = "Login";
}
<div class="row d-flex justify-content-center" style="padding-top: 155px;">
    <div class="card">
        <div class="card-body bg-light-blue p-5">
            <div class="d-flex justify-content-center pl-3 pr-3 pt-3">
                <h2>RCBC DPU TELLERLESS PORTAL</h2>
            </div>
            <section class="p-5 bg-white">

                <form id="frmReset" novalidate="novalidate">
                    <label class="text-danger pb-3"><strong>*Please follow the format (Lowercase + Uppercase + Number + Special Character)</strong></label>
                    <input type="hidden" name="Username" value="@ViewBag.Username">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelForModel("Old Password", new { @class = "label-control" })
                                @Html.TextBoxFor(x => x.OldPassword, new { @class = "form-control", type="password", placeholder = "Old Password", autocomplete="off"})
                                @Html.ValidationMessageFor(x => x.OldPassword)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelForModel("New Password", new { @class = "label-control" })
                                @Html.TextBoxFor(x => x.NewPassword, new { @class = "form-control", type="password", placeholder = "New Password", autocomplete="off"})
                                @Html.ValidationMessageFor(x => x.NewPassword)
                                <a id="password_validation"></a>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelForModel("Confirm Password", new { @class = "label-control" })
                                @Html.TextBoxFor(x => x.ConfirmPassword, new { @class = "form-control", type="password", placeholder = "Confirm Password", autocomplete="off"})
                                @Html.ValidationMessageFor(x => x.ConfirmPassword)
                                <a id="password_confirm"></a>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-md" id="btnConfirm">Confirm</button>
                        <button type="button" class="btn btn-warning btn-md ml-3" id="btnReset">Reset</button>
                    </div>
                </form>

            </section>

        </div>
    </div>
</div>
<!-- /.content-wrapper -->
@section Scripts
    {
    <script>
        $(document).ready(function () {
            ValidateForm();
            function ValidateForm() {
                $.validator.setDefaults({
                    submitHandler: function () {
                        UpdatePassword();
                    }
                });
                $('#frmReset').validate({
                    rules: {
                        OldPassword: {
                            required: true
                        },
                        NewPassword: {
                            required: true
                        },
                        ConfirmPassword: {
                            required: true
                        },
                    },
                    messages: {
                        OldPassword: {
                            required: "This field is required"
                        },
                        NewPassword: {
                            required: "This field is required"
                        },
                        ConfirmPassword: {
                            required: "This field is required"
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                        console.log(element);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                        console.log(element);
                    }
                });
            }
            function UpdatePassword() {

                var formData = $("#frmReset").serialize();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdatePassword", "Home")',
                    data: formData,
                    success: function (response) {
                        if (response.success == true) {
                            $("#frmReset").trigger("reset");
                            window.location.href = "@Url.Action("ContinueLogin", "Home")";
                        }
                        else {
                            Swal.fire('Warning!', response.message, 'warning');
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }


            $("[name='NewPassword']").keyup(function () {
                var NewPassword = $("[name='NewPassword']").val();
                var IsStrong = IsStrongPassword(NewPassword);

                if (IsStrong) {
                    $('#password_validation').removeClass("text-danger");
                    $('#password_validation').addClass("text-success").html("Strong Password");
                }
                else {
                    $('#password_validation').removeClass("text-success");
                    $('#password_validation').addClass("text-danger").html("Weak Password");
                }
            });

            $("[name='ConfirmPassword']").keyup(function () {
                var NewPassword = $("[name='NewPassword']").val();
                var ConfirmPassword = $("[name='ConfirmPassword']").val();

                if (NewPassword != ConfirmPassword) {
                    $('#password_confirm').removeClass("text-success");
                    $('#password_confirm').addClass("text-danger").html("Password does not match.");
                }
                else {
                    $('#password_confirm').removeClass("text-danger");
                    $('#password_confirm').addClass("text-success").html("Password match.");
                }
            });

            $('#btnReset').click(function () {
                $("#frmReset").trigger("reset");
            })

            $('#frmReset').submit(function () {
                $('#loading-image').show();
            });
        });
    </script>
}