@model RCBC.Models.PartnerVendorModel
@{
    ViewData["Title"] = "Partner Vendor Maintenance";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" style="padding-top: 60px;">

    <div class="pl-3 pr-3 pt-3">
        <label>Last Login: @ViewBag.DateNow.ToString("MMMM dd, yyyy HH:mm:ss")</label>
    </div>

    <div class="ln_solid"></div>
    <!-- Content Header (Page header) -->
    <div class="content-header pt-0 pb-0">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="">Add New Partner Vendor</a></li>
                        <li class="breadcrumb-item active">Maintenance</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">

            <div class="d-flex justify-content-center">

                <div class="col-md-6">
                    <div class="card card-light-blue">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fa fa-handshake-o pr-2"></i>Add New Partner Vendor</h3>
                        </div>

                        <form id="form_partner" novalidate="novalidate">

                            <div class="card-body">

                                <div class="modal-body">
                                    @Html.HiddenFor(x => x.Id)
                                    @Html.HiddenFor(x => x.IsApproved)
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="form-group">
                                                @Html.LabelForModel("Vendor Name", new { @class = "label-control" })
                                                @Html.TextBoxFor(x => x.VendorName, new { @class = "form-control", placeholder = "Vendor Name" })
                                                @Html.ValidationMessageFor(x => x.VendorName)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="form-group">
                                                @Html.LabelForModel("Vendor Code", new { @class = "label-control" })
                                                @Html.TextBoxFor(x => x.VendorCode, new { @class = "form-control", placeholder = "Vendor Code" })
                                                @Html.ValidationMessageFor(x => x.VendorCode)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="form-group">
                                                @Html.LabelForModel("Assigned GL", new { @class = "label-control" })
                                                @Html.TextBoxFor(x => x.AssignedGL, new { @class = "form-control", placeholder = "Assigned GL" })
                                                @Html.ValidationMessageFor(x => x.AssignedGL)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="form-group">
                                                @Html.LabelForModel("Email", new { @class = "label-control" })
                                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email", type = "email" })
                                                @Html.ValidationMessageFor(x => x.Email)
                                            </div>
                                        </div>
                                    </div>
                                 @*    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group clearfix">
                                                <div class="icheck-primary d-inline">
                                                    @Html.CheckBoxFor(x => x.Active, new { @id = "Active" })
                                                    @Html.Label("Active", "Active Status")
                                                </div>
                                            </div>
                                        </div>
                                    </div> *@

                                </div>

                            </div>

                            <div class="card-footer">
                                <div class="d-flex justify-content-end">
                                    <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
                                    <button type="button" id="btnCancel" class="btn btn-danger ml-3">Cancel</button>
                                </div>
                            </div>

                        </form>
                    </div>
                </div>

            </div>
        </div><!--/. container-fluid -->
    </section>

</div>
<!-- /.content-wrapper -->
@section Scripts
    {
    <script>
        $(document).ready(function () {

            ValidateFormVendor();
            function ValidateFormVendor() {
                $.validator.setDefaults({
                    submitHandler: function () {
                        SavePartnerVendor();
                    }
                });
                $('#form_partner').validate({
                    rules: {
                        VendorName: {
                            required: true
                        },
                        VendorCode: {
                            required: true
                        },
                        AssignedGL: {
                            required: true
                        },
                        Email: {
                            required: true
                        },
                    },
                    messages: {
                        VendorName: {
                            required: "This field is required"
                        },
                        VendorCode: {
                            required: "This field is required"
                        },
                        AssignedGL: {
                            required: "This field is required"
                        },
                        Email: {
                            required: "This field is required"
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                        console.log(element);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                        console.log(element);
                    }
                });
            }

            function SavePartnerVendor() {
                $('#loading-image').show();
                var formData = $("#form_partner").serialize();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SavePartnerVendor", "Maintenance")',
                    data: formData,
                    success: function (response) {
                        if (response.success == true) {
                            Swal.fire('Success!', response.message, 'success');
                            $("#form_partner").trigger("reset");
                        }
                        else {
                            Swal.fire('Warning!', response.message, 'warning');
                        }
                        $('#loading-image').hide();
                    },
                    failure: function (response) {
                        $('#loading-image').hide();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        $('#loading-image').hide();
                        alert(response.responseText);
                    }
                });
            }

            $("#btnCancel").click(function (e) {
                e.preventDefault();
                $("#form_partner").trigger("reset");
            });

        });

        ActiveMenu("#partner_vendor");
        ActiveMenu("#add_partner_vendor");

    </script>
}

