@model RCBC.Models.UserRoleModel
@{
    ViewData["Title"] = "Role Maintenance";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" style="padding-top: 60px;">

    <div class="pl-3 pr-3 pt-3">
        <label>Last Login: @ViewBag.DateNow.ToString("MMMM dd, yyyy HH:mm:ss")</label>
    </div>

    <div class="ln_solid"></div>
    <!-- Content Header (Page header) -->
    <div class="content-header pt-0 pb-0">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="">Role</a></li>
                        <li class="breadcrumb-item active">Maintenance</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">

            <div class="d-flex justify-content-center">

                <div class="col-md-6">
                    <div class="card card-light-blue">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fa fa-user pr-2"></i>Role</h3>
                        </div>

                        <form id="frmUserRole" class="p-2" novalidate="novalidate">
                            <div class="card-body">

                                <input type="hidden" name="Id">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelForModel("UserRole", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.UserRole, new { @class = "form-control", placeholder = "User Role" })
                                            @Html.ValidationMessageFor(x => x.UserRole)
                                        </div>
                                    </div>
                                </div>
                                <div class="row pb-3 pt-3">
                                    <div class="col-md-12">
                                        <div class="dataTables_wrapper table-responsive dt-bootstrap4">
                                            <table id="tbl_roles" class="table table-bordered table-hover text-center" style="width:100%"></table>
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="card-footer">
                                <div class="d-flex justify-content-end">
                                    <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
                                    <button type="button" id="btnCancel" class="btn btn-danger ml-3">Cancel</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

            </div>
        </div><!--/. container-fluid -->
    </section>

</div>
<!-- /.content-wrapper -->
@section Scripts
    {
    <script>
        $(document).ready(function () {
            ValidateForm();
            function ValidateForm() {
                $.validator.setDefaults({
                    submitHandler: function () {
                        SaveUserRole();
                    }
                });
                $('#frmUserRole').validate({
                    rules: {
                        UserRole: {
                            required: true
                        },
                    },
                    messages: {
                        UserRole: {
                            required: "This field is required"
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                        console.log(element);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                        console.log(element);
                    }
                });
            }

            $('#btnCancel').click(function () {
                $("#frmUserRole").trigger("reset");
            })

            function SaveUserRole() {
                $('#loading-image').show();
                var formData = $("#frmUserRole").serialize();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveUserRole", "Maintenance")',
                    data: formData,
                    success: function (response) {
                        if (response.success == true) {
                            Swal.fire('Success!', response.message, 'success');
                            $("#frmUserRole").trigger("reset");
                            $("[name='Id']").val(0);
                            LoadUserRoles();
                        }
                        else {
                            Swal.fire('Warning!', 'User Role Already Exists.', 'warning');
                        }
                        $('#loading-image').hide();
                    },
                    failure: function (response) {
                        $('#loading-image').hide();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        $('#loading-image').hide();
                        alert(response.responseText);
                    }
                });
            }

            LoadUserRoles();
            function LoadUserRoles() {
                $('#tbl_roles').DataTable({
                    destroy: true,
                    responsive: true,
                    processing: false,
                    search: true,
                    stateSave: true,
                    info: true,
                    searching: true,
                    paging: true,
                    //order: [[1, "asc"], [2, "asc"]],
                    //lengthMenu: [[5, 10, 20, -1], [5, 10, 20, "All"]],
                    ajax: {
                        "url": "../Maintenance/LoadUserRoles",
                        "type": "GET",
                        "datatype": "JSON",
                    },
                    columns:
                        [
                            { "data": "userRole", title: "User Role", sClass: "dt-body-center", orderable: false },
                            {
                                "data": "id", title: "Action", render: function (data) {
                                    return "<div class='row justify-content-center'>" +
                                        "<div class='dropdown dropleft'>" +
                                        "<button id='btnbars' type='button' class='btn btn-sm btn-primary btnbars' data-toggle='dropdown'>" +
                                        "<i class='fa fa-bars'></i>" +
                                        "</button> <div class='dropdown-menu'>" +
                                        "<div class='container fluid'> " +
                                        "<a id='btnUpdate' class='btn btn-warning btn-sm fa fa-edit col-sm-12' style='margin-bottom: 3px; margin-top: 3px;'>" +
                                        "&nbspUpdate</a>" +
                                        "<br />" +
                                        "<a id='btnDelete' class='btn btn-danger btn-sm fa fa-trash col-sm-12' style='margin-bottom: 3px; margin-top: 3px; color: white;'>" +
                                        "&nbspDelete</a>" +
                                        "</div></div></div ></div>";
                                }
                            }
                        ]
                });

                $('#tbl_roles tbody').off().on('click', 'tr', function (e) {
                    e.preventDefault();
                    if ($(e.target).is("[id^=btnUpdate],[id^=btnUpdate] i")) {
                        UpdateUserRoles();
                    }
                    else if ($(e.target).is("[id^=btnDelete],[id^=btnDelete] i")) {
                        RemoveUserRole();
                    }
                    else if (!$(e.target).is("[id^=btnbars],[id^=btnbars] i")) {
                        if (!$(this).hasClass("dtactive")) {
                            $(this).parent().find("tr").removeClass("dtactive");
                            $(this).addClass("dtactive");
                            Id = SelectedValue("tbl_roles", "id");
                            $("[name='Id']").val(Id);
                        } else {
                            $(this).removeClass("dtactive");
                            $("[name='Id']").val(0);
                            $("#frmUserRole").trigger("reset");
                        }
                    }
                });
            }

            function UpdateUserRoles() {
                if ($("[name='Id']").val() != 0) {
                    $.ajax({
                        url: "../Maintenance/UpdateUserRoles?Id= " + $("[name='Id']").val(),
                        type: "GET",
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (res) {
                            if (res.data != null) {
                                $("[name='UserRole']").val(res.data.userRole);
                            }
                        }
                    });
                }
                else {
                    Swal.fire('Information!', 'Please select a record first.', 'info');
                }
            }

            function RemoveUserRole() {
                if ($("[name='Id']").val() != 0) {
                    Swal.fire({
                        text: "Are you sure you want to delete this record?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#28a745',
                        cancelButtonColor: '#dc3545',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '../Maintenance/RemoveUserRole?&Id=' + $("[name='Id']").val(),
                                type: 'POST',
                                success: function (res) {
                                    if (res.success == true) {
                                        Swal.fire('Success!', 'Record has been deleted.', 'success');
                                        $("#frmUserRole").trigger("reset");
                                        $("[name='Id']").val(0);
                                        LoadUserRoles();
                                    } else {
                                        Swal.fire('Error!', res.msg, 'error');
                                    }
                                }
                            });
                        }
                    });
                }
                else {
                    Swal.fire('Information!', 'Please select a record first.', 'info');
                }
            }


        });

        ActiveMenu("#role");
        ActiveMenu("#create_role");

    </script>
}

