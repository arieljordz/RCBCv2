@model RCBC.Models.UserModel
@{
    ViewData["Title"] = "User Maintenance";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" style="padding-top: 60px;">

    <div class="pl-3 pr-3 pt-3">
        <label>Last Login: @ViewBag.DateNow.ToString("MMMM dd, yyyy HH:mm:ss")</label>
    </div>

    <div class="ln_solid"></div>
    <!-- Content Header (Page header) -->
    <div class="content-header pt-0 pb-0">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="">Create New User</a></li>
                        <li class="breadcrumb-item active">Maintenance</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">

            <div class="d-flex justify-content-center">

                <div class="col-md-12">
                    <div class="card card-light-blue">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fa fa-user pr-2"></i>Create New User</h3>
                        </div>

                        <form id="frmRegister" class="p-2" novalidate="novalidate">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelForModel("User ID", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.UserId, new { @class = "form-control", placeholder = "User ID" })
                                            @Html.ValidationMessageFor(x => x.UserId)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelForModel("Employee Name", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.EmployeeName, new { @class = "form-control", placeholder = "Employee Name" })
                                            @Html.ValidationMessageFor(x => x.EmployeeName)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelForModel("Email", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", type="email", placeholder = "Email" })
                                            @Html.ValidationMessageFor(x => x.Email)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelForModel("Mobile Number", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control", placeholder = "Mobile Number" })
                                            @Html.ValidationMessageFor(x => x.MobileNumber)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelForModel("Group/Department", new { @class = "label-control" })
                                            @Html.DropDownList("GroupDept", ViewBag.cmbDepartments as SelectList, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.GroupDept)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelForModel("User Role", new { @class = "label-control" })
                                            @Html.DropDownList("UserRole", ViewBag.cmbUserRoles as SelectList, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.UserRole)
                                        </div>
                                    </div>
                                </div>
                                <div class="row pb-2 pt-2">
                                    <div class="col-md-12">
                                        <div class="dataTables_wrapper table-responsive dt-bootstrap4">
                                            <table id="tbl_modules" class="table table-bordered table-hover" style="width:100%"></table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                     
                            <div class="card-footer">
                                <div class="d-flex justify-content-end">
                                    <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
                                    <button type="button" id="btnCancel" class="btn btn-danger ml-3">Cancel</button>
                                </div>
                            </div>
                        </form>

                    </div>
                </div>

            </div>
        </div><!--/. container-fluid -->
    </section>

</div>
<!-- /.content-wrapper -->
@section Scripts
    {
    <script>
        $(document).ready(function () {

            var checkedCheckboxIds = [];

            ValidateForm();
            function ValidateForm() {
                $.validator.setDefaults({
                    submitHandler: function () {
                        Register();
                    }
                });
                $('#frmRegister').validate({
                    rules: {
                        UserId: {
                            required: true
                        },
                        EmployeeName: {
                            required: true
                        },
                        Email: {
                            required: true
                        },
                        MobileNumber: {
                            required: true
                        },
                    },
                    messages: {
                        UserId: {
                            required: "This field is required"
                        },
                        EmployeeName: {
                            required: "This field is required"
                        },
                        Email: {
                            required: "This field is required"
                        },
                        MobileNumber: {
                            required: "This field is required"
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                        console.log(element);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                        console.log(element);
                    }
                });
            }

            $('#btnCancel').click(function () {
                $("#frmRegister").trigger("reset");
            })

            function Register() {
                $('#loading-image').show();

                var checkedCheckboxes = $('input[type="checkbox"]:checked');
                var checkedCheckboxIds = [];

                checkedCheckboxes.each(function () {
                    var checkboxId = $(this).attr('id');
                    checkedCheckboxIds.push(checkboxId);
                });
                console.log('IDs of checked checkboxes:', checkedCheckboxIds);

                var formData = new FormData($("#frmRegister")[0]);  

                formData.append("ModuleIds", checkedCheckboxIds.join(','));

                console.log(formData);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Register", "Maintenance")',
                    data: formData,
                    contentType: false, 
                    processData: false,  
                    success: function (response) {
                        if (response.success == true) {
                            $('#loading-image').hide();
                            Swal.fire('Success!', 'User successfully registered.', 'success');
                            $("#frmRegister").trigger("reset");
                        } else {
                            Swal.fire('Warning!', 'User Already Exists.', 'warning');
                        }
                    },
                    failure: function (response) {
                        $('#loading-image').hide();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        $('#loading-image').hide();
                        alert(response.responseText);
                    }
                });
            }

            LoadUserAccessById(0);
            function LoadUserAccessById(UserId) {
                var tbl_modules = $('#tbl_modules').DataTable({
                    destroy: true,
                    responsive: true,
                    processing: false,
                    search: false,
                    stateSave: true,
                    info: false,
                    searching: false,
                    paging: false,
                    ajax: {
                        "url": "../Maintenance/LoadUserAccessById",
                        "type": "GET",
                        "data": { UserId: UserId },
                        "datatype": "JSON",
                    },
                    columns:
                        [
                            {
                                data: "isActive", title: "Active", sClass: "text-center", render: function (data, type, row) {
                                    var subModuleId = row.subModuleId;
                                    if (data == true) {
                                        return '<div class="icheck-primary d-inline"><input type="checkbox" id="' + subModuleId + '" checked="checked"><label for="' + subModuleId + '"></label></div>'
                                    }
                                    else {
                                        return '<div class="icheck-primary d-inline"><input type="checkbox" id="' + subModuleId + '"><label for="' + subModuleId + '"></label></div>'
                                    }
                                }
                            },
                            { "data": "subModuleId", visible: false, "orderable": false },
                            { "data": "module", title: "Module", sClass: "text-left", orderable: false },
                            { "data": "subModule", title: "Sub Module", sClass: "text-left", orderable: false },

                        ]
                });

                $('#tbl_modules tbody').off().on('click', 'tr', function (e) {
                    e.preventDefault();
                    var row = tbl_modules.row(this);
                    var checkbox = row.nodes().to$().find('input[type="checkbox"]');
                    var checkboxId = checkbox.attr('id');

                    if (!$(this).hasClass("dtactives")) {
                        $(this).parent().find("tr").removeClass("dtactives");
                        $(this).addClass("dtactives");
                        checkbox.prop('checked', !checkbox.prop('checked'));
                    } else {
                        $(this).removeClass("dtactives");

                        checkbox.prop('checked', false);
                    }
                });
            }

        });

        ActiveMenu("#maintenance");
        ActiveMenu("#create_user");

    </script>
}

