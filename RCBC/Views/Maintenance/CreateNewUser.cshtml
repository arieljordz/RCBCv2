@model RCBC.Models.UserModel
@{
    ViewData["Title"] = "Create New User";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" style="padding-top: 60px;">

    <div class="pl-3 pr-3 pt-3">
        <label>Last Login: @ViewBag.DateNow.ToString("MMMM dd, yyyy HH:mm:ss")</label>
    </div>

    <div class="ln_solid"></div>
    <!-- Content Header (Page header) -->
    <div class="content-header pt-0 pb-0">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Maintenance</a></li>
                        <li class="breadcrumb-item active">Create New User</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">

            <div class="d-flex justify-content-center">

                <div class="col-md-6">
                    <div class="card card-light-blue">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fa fa-user pr-2"></i>Create New User</h3>
                        </div>

                        <form id="frmRegister" class="p-2" novalidate="novalidate">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelForModel("User ID", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.UserId, new { @class = "form-control", placeholder = "User ID" })
                                            @Html.ValidationMessageFor(x => x.UserId)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelForModel("Employee Name", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.EmployeeName, new { @class = "form-control", placeholder = "Employee Name" })
                                            @Html.ValidationMessageFor(x => x.EmployeeName)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelForModel("Email", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email" })
                                            @Html.ValidationMessageFor(x => x.Email)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelForModel("MobileNumber", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control", placeholder = "Mobile Number" })
                                            @Html.ValidationMessageFor(x => x.MobileNumber)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Group/Department</label>
                                            <select class="form-control" name="GroupDept">
                                                <option>GTB-BizSol</option>
                                                <option>GTB-DBM</option>
                                                <option>Operations</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Role</label>
                                            <select class="form-control" name="UserRole">
                                                <option>System Admin</option>
                                                <option>Admin (User)</option>
                                                <option>Maker/Approver</option>
                                                <option>Operations</option>
                                                <option>IT Support</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                                <button type="submit" id="btnSubmit" class="btn btn-primary">Submit</button>
                                <button type="button" id="btnCancel" class="btn btn-danger ml-3">Cancel</button>
                            </div>
                        </form>

                    </div>
                </div>

            </div>
        </div><!--/. container-fluid -->
    </section>

</div>
<!-- /.content-wrapper -->
@section Scripts
    {
    <script>
        $(document).ready(function () {

            ValidateForm();
            function ValidateForm() {
                $.validator.setDefaults({
                    submitHandler: function () {
                        Register();
                    }
                });
                $('#frmRegister').validate({
                    rules: {
                        UserId: {
                            required: true
                        },
                        EmployeeName: {
                            required: true
                        },
                        Email: {
                            required: true
                        },
                        MobileNumber: {
                            required: true
                        },
                    },
                    messages: {
                        UserId: {
                            required: "This field is required"
                        },
                        EmployeeName: {
                            required: "This field is required"
                        },
                        Email: {
                            required: "This field is required"
                        },
                        MobileNumber: {
                            required: "This field is required"
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                        console.log(element);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                        console.log(element);
                    }
                });
            }

            $('#btnCancel').click(function () {
                $("#frmRegister").trigger("reset");
            })

            function Register() {

                var formData = $("#frmRegister").serialize();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Register", "Maintenance")',
                    data: formData,
                    success: function (response) {
                        if (response.success == true) {

                            Swal.fire('Success!', 'User succesfully registered.', 'success');
                            $("#frmRegister").trigger("reset");
                        }
                        else {
                            Swal.fire('Warning!', 'User Already Exists.', 'warning');
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }
        });

        ActiveMenu("#maintenance");
        ActiveMenu("#create_user");

    </script>
}

