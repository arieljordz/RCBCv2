@model RCBC.Models.AuditLogsModel
@{
    ViewData["Title"] = "Reports";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" style="padding-top: 60px;">

    <div class="pl-3 pr-3 pt-3">
        <label>Last Login: @ViewBag.DateNow.ToString("MMMM dd, yyyy HH:mm:ss")</label>
    </div>

    <div class="ln_solid"></div>
    <!-- Content Header (Page header) -->
    <div class="content-header pt-0 pb-0">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="">Audit Logs</a></li>
                        <li class="breadcrumb-item active">Reports</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">

            <div class="d-flex justify-content-center">

                <div class="col-md-12">
                    <div class="card card-light-blue">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fa fa-user pr-2"></i>Audit Logs</h3>
                        </div>

                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.PreviousData)
                        @Html.HiddenFor(x => x.NewData)
                        @Html.HiddenFor(x => x.TableName)
                        @Html.HiddenFor(x => x.TableId)

                        <div class="card-body">

                            <form id="frmSearchAudit" novalidate="novalidate">
                                <div class="row">
                                    <div class="col-lg-2">
                                        <div class="form-group">
                                            @Html.LabelForModel("Date From", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.DateFrom, new { @class = "form-control", type = "date" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2">
                                        <div class="form-group">
                                            @Html.LabelForModel("Date To", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.DateTo, new { @class = "form-control", type = "date" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-2">
                                        <div class="form-group">
                                            @Html.LabelForModel("Modified By", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.EmployeeName, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-lg-3">
                                        <div class="form-group">
                                            @Html.LabelForModel("Group", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.GroupDept, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2">
                                        <div class="form-group">
                                            @Html.LabelForModel("Role", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.UserRole, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2">
                                        <div class="form-group">
                                            @Html.LabelForModel("Action", new { @class = "label-control" })
                                            @Html.TextBoxFor(x => x.Action, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2 pt-4">
                                        <div class="form-group pt-2">
                                            <button type="button" id="btnSearch" class="btn btn-primary mr-2"><i class="fa fa-search"></i>Search</button>
                                            <button type="button" id="btnClear" class="btn btn-danger">Clear</button>
                                        </div>
                                    </div>
                                </div>

                            </form>

                            <div class="row pl-2">
                                <button type="button" id="btnExcel" class="btn btn-success mr-2"><i class="fas fa-file-excel" style="font-size: x-large;"></i></button>
                                <button type="button" id="btnPdf" class="btn btn-danger mr-2"><i class="fas fa-file-pdf" style="font-size: x-large;"></i></button>
                                <button type="button" id="btnCsv" class="btn btn-info mr-2"><i class="fas fa-file-csv" style="font-size: x-large;"></i></button>
                                <button type="button" id="btnPrint" class="btn btn-secondary mr-2"><i class="fas fa-print" style="font-size: x-large;"></i></button>
                            </div>

                            <div class="row pb-3 pt-3">
                                <div class="col-md-12">
                                    <div class="dataTables_wrapper table-responsive dt-bootstrap4">
                                        <table id="tbl_auditLogs" class="table table-bordered table-hover text-center" style="width:100%"></table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card-footer">
                        </div>
                    </div>
                </div>

            </div>
        </div><!--/. container-fluid -->
    </section>

    <div id="modal_client_changes" class="modal fade" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-md pt-5">

            <div class="modal-content">
                <div class="modal-header bg-light-blue">
                    <h4 class="modal-title" id="modal_name"><i class="fa fa-address-book-o pr-2"></i>Changes Details</h4>
                    <button type="button" class="close" data-dismiss="modal">×</button>
                </div>

                <div class="p-3">

                    <div class="row pb-3 pt-3">
                        <div class="col-md-12">
                            <div class="dataTables_wrapper table-responsive dt-bootstrap4">
                                <table id="tbl_changes_details" class="table table-bordered table-hover text-center" style="width:100%"></table>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="button" id="btnCancelChanges" class="btn btn-danger">Cancel</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
    @*
    <div id="modal_data" class="modal fade" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-md pt-5">

    <div class="modal-content">
    <div class="modal-header bg-light-blue">
    <h4 class="modal-title" id="modal_name"><i class="fa fa-address-book-o pr-2"></i>Information</h4>
    <button type="button" class="close" data-dismiss="modal">×</button>
    </div>

    <div class="p-3">

    <div class="row pb-3 pt-3">
    <div class="col-md-12">
    <div class="form-group">
    @Html.LabelForModel("Previous Data", new { @class = "label-control" })
    <textarea class="form-control" id="previous_textarea" readonly="readonly" style="height: 100px"></textarea>
    </div>
    </div>
    </div>
    <div class="row pb-3 pt-3">
    <div class="col-md-12">
    <div class="form-group">
    @Html.LabelForModel("New Data", new { @class = "label-control" })
    <textarea class="form-control" id="new_textarea" readonly="readonly" style="height: 100px"></textarea>
    </div>
    </div>
    </div>

    <div class="d-flex justify-content-end">
    <button type="button" id="btnCancel" class="btn btn-danger">Cancel</button>
    </div>
    </div>
    </div>

    </div>
    </div> *@

    <div id="modal_print" class="modal fade" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-md pt-5">

            <div class="modal-content">
                <div class="modal-header bg-light-blue">
                    <h4 class="modal-title" id="modal_name"><i class="fa fa-address-book-o pr-2"></i>Preview Data</h4>
                    <button type="button" class="close" data-dismiss="modal">×</button>
                </div>

                <div class="p-3">

                    <div class="row pb-3 pt-3">
                        <div id="previewContainer">
                        </div>
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="button" id="btnPrintNow" class="btn btn-primary">Print</button>
                        <button type="button" id="btnCancelP" class="btn btn-danger ml-2">Cancel</button>
                    </div>
                </div>
            </div>

        </div>
    </div>

</div>
<!-- /.content-wrapper -->
@section Scripts
{
    <script>
        $(document).ready(function () {

            LoadAuditLogs();
            function LoadAuditLogs() {

                var DateFrom = $("[name='DateFrom']").val();
                var DateTo = $("[name='DateTo']").val();
                var EmployeeName = $("[name='EmployeeName']").val();
                var GroupDept = $("[name='GroupDept']").val();
                var UserRole = $("[name='UserRole']").val();
                var Action = $("[name='Action']").val();

                $('#tbl_auditLogs').DataTable({
                    destroy: true,
                    responsive: true,
                    processing: false,
                    search: true,
                    stateSave: true,
                    info: true,
                    searching: false,
                    paging: true,
                    order: [[1, "asc"], [2, "asc"]],
                    lengthMenu: [[5, 10, 20, -1], [5, 10, 20, "All"]],
                    ajax: {
                        "url": "../Reports/LoadAuditLogs",
                        "type": "POST",
                        "data": { DateFrom: DateFrom, DateTo: DateTo, EmployeeName: EmployeeName, GroupDept: GroupDept, UserRole: UserRole, Action: Action },
                        "datatype": "JSON",
                    },
                    columns:
                        [
                            // { "data": "module", title: "Module", sClass: "text-center", orderable: false },
                            // { "data": "subModule", title: "SubModule", sClass: "text-center", orderable: false },
                            // { "data": "childModule", title: "ChildModule", sClass: "text-center", orderable: false },

                            { "data": "modifiedBy", title: "User ID", sClass: "text-center", orderable: false },
                            { "data": "employeeName", title: "Modified By", sClass: "text-center", orderable: false },
                            { "data": "ip", title: "IP Address", sClass: "text-center", orderable: false },
                            {
                                "data": "dateModified", title: "DateModified", sClass: "text-center", render: function (data, type, row) {
                                    return DateDataTable(data);
                                }
                            },
                            { "data": "groupDept", title: "Group", sClass: "text-center", orderable: false },
                            { "data": "userRole", title: "Role", sClass: "text-center", orderable: false },
                            { "data": "action", title: "Action", sClass: "text-center", orderable: false },
                            { "data": "previousData", title: "PreviousData", sClass: "text-center", orderable: false, visible: false },
                            { "data": "newData", title: "NewData", sClass: "text-center", orderable: false, visible: false },
                            { "data": "tableName", title: "TableName", sClass: "text-center", orderable: false, visible: false },
                            { "data": "tableId", title: "TableId", sClass: "text-center", orderable: false, visible: false },
                            //{ "data": "modifiedBy", title: "ModifiedBy ID", sClass: "text-center", orderable: false },
                            {
                                "data": "id", title: "View Data", render: function (data) {
                                    return "<button type='button' class='btn btn-xs btn-info view'><i class='fa fa-exchange p-1 view'></i></button>";
                                }
                            }
                        ]
                });

                $('#tbl_auditLogs tbody').off().on('click', 'tr', function (e) {
                    e.preventDefault();
                    if (!$(e.target).is(".view")) {
                        if (!$(this).hasClass("dtactive")) {
                            $(this).parent().find("tr").removeClass("dtactive");
                            $(this).addClass("dtactive");
                            Id = SelectedValue("tbl_auditLogs", "id");
                            $("[name='Id']").val(Id);
                            $("[name='TableId']").val(SelectedValue("tbl_auditLogs", "tableId"));
                            $("[name='TableName']").val(SelectedValue("tbl_auditLogs", "tableName"));
                            $("[name='PreviousData']").val(SelectedValue("tbl_auditLogs", "previousData"));
                            $("[name='NewData']").val(SelectedValue("tbl_auditLogs", "newData"));
                        } else {
                            $(this).removeClass("dtactive");
                            $("[name='Id']").val(0);
                            $("[name='TableId']").val(0);
                            $("[name='TableName']").val(0);
                            $("[name='PreviousData']").val("");
                            $("[name='NewData']").val("");
                        }
                    }
                });
            }

            $(document).on('click', '.view', function () {
                if ($("[name='Id']").val() != 0) {
                    // $("#modal_data").modal("show");
                    // $("#previous_textarea").val($("[name='PreviousData']").val());
                    // $("#new_textarea").val($("[name='NewData']").val());
                    LoadChangesDetails();
                }
                else {
                    Swal.fire('Information!', 'Please select a record first.', 'info');
                }
            });

            function LoadChangesDetails() {
                $.ajax({
                    url: "../Maintenance/LoadChangesDetails",
                    data: { Id: $("[name='TableId']").val(), TableName: $("[name='TableName']").val() },
                    type: "GET",
                    dataType: "JSON",
                    success: function (res) {
                        if (res.data.length === 0) {
                            Swal.fire('Information!', 'No Data changes for this record.', 'info');
                        } else {
                            $("#modal_client_changes").modal("show");
                            $('#tbl_changes_details').DataTable({
                                destroy: true,
                                responsive: true,
                                processing: false,
                                search: true,
                                stateSave: true,
                                info: true,
                                searching: false,
                                paging: true,
                                order: [[1, "asc"], [2, "asc"]],
                                lengthMenu: [[5, 10, 20, -1], [5, 10, 20, "All"]],
                                data: res.data,
                                columns: [
                                    { "data": "property", title: "Property", sClass: "dt-body-center", orderable: false },
                                    { "data": "oldValue", title: "Old Value", sClass: "dt-body-center", orderable: false },
                                    { "data": "newValue", title: "New Value", sClass: "dt-body-center", orderable: false },
                                ]
                            });
                        }
                    },
                    error: function () {
                        console.log("Error loading data.");
                    }
                });

                $('#tbl_changes_details tbody').off().on('click', 'tr', function (e) {
                    e.preventDefault();
                    if (!$(e.target).is(".view")) {
                        if (!$(this).hasClass("dtactive")) {
                            $(this).parent().find("tr").removeClass("dtactive");
                            $(this).addClass("dtactive");
                        } else {
                            $(this).removeClass("dtactive");
                        }
                    }
                });
            }

            $("#btnCancel").click(function (e) {
                e.preventDefault();
                $("#modal_data").modal("hide");
            });

            $("#btnCancelChanges").click(function (e) {
                e.preventDefault();
                $("#modal_client_changes").modal("hide");
            });

            function DownloadAuditLogs(Type) {
                $('#loading-image').show();
                $.ajax({
                    url: "../Reports/DownloadAuditLogs",
                    data: { Type: Type },
                    type: "GET",
                    dataType: "JSON",
                    success: function (res) {
                        console.log(res);
                        if (res.success) {
                            Swal.fire('Information!', res.message, 'info');
                        } else {
                            Swal.fire('Warming!', res.message, 'warning');
                        }
                        $('#loading-image').hide();
                    },
                    error: function () {
                        console.log("Error in downloading data.");
                    }
                });
            }

            $("#btnExcel").click(function (e) {
                e.preventDefault();
                DownloadAuditLogs("EXCEL");
            });

            $("#btnPdf").click(function (e) {
                e.preventDefault();
                DownloadAuditLogs("PDF");
            });

            $("#btnCsv").click(function (e) {
                e.preventDefault();
                DownloadAuditLogs("CSV");
            });

            $("#btnPrint").click(function (e) {
                e.preventDefault();
                window.print();
            });

            // $("#btnPrint").click(function (e) {
            //     e.preventDefault();
            //     $('#loading-image').show();

            //     $.ajax({
            //         url: "../Reports/PrintAuditLogs",
            //         data: { Type: "Print" },
            //         type: "GET",
            //         dataType: "html",
            //         success: function (res) {
            //             $('#previewContainer').html(res);

            //             $("#modal_print").modal("show");

            //             $("#modal_print").on("hidden.bs.modal", function () {
            //             });

            //             $('#loading-image').hide();
            //         },
            //         error: function (jqXHR, textStatus, errorThrown) {
            //             console.log("Error in downloading data. Status: " + textStatus + ", Error: " + errorThrown);

            //             $('#loading-image').hide();
            //         }
            //     });
            // });

            // $("#btnPrintNow").click(function (e) {
            //     e.preventDefault();
            //     window.print();
            // });

            // $("#btnCancelP").click(function () {
            //     $("#modal_print").modal("hide");
            // });

            $("#btnSearch").click(function (e) {
                e.preventDefault();

                var DateFrom = $("[name='DateFrom']").val();
                var DateTo = $("[name='DateTo']").val();

                if (DateFrom != "" && DateTo != "") {
                    $('#loading-image').show();

                    LoadAuditLogs();

                    $('#loading-image').hide();
                } else {
                    Swal.fire('Warming!', 'Select Date Range first.', 'warning');
                }
            });

            $("#btnClear").click(function (e) {
                e.preventDefault();
                $("#frmSearchAudit").trigger("reset");
            });

        });

        ActiveMenu("#audit_logs");

    </script>
}

